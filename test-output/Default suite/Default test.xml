<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-19MCO0V" ignored="0" name="Default test" tests="2" failures="0" timestamp="14 Aug 2019 15:27:04 GMT" time="0.406" errors="0">
  <testcase name="@BeforeTest LaunchBrowser" time="0.281" classname="loginScreen.TestLogin">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at com.google.common.base.Preconditions.checkState(Preconditions.java:847)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:134)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:44)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:167)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:190)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:147)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:125)
at loginScreen.TestLogin.LaunchBrowser(TestLogin.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest LaunchBrowser -->
  <testcase name="@BeforeMethod VerifyHomePage" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- @BeforeMethod VerifyHomePage -->
  <testcase name="@AfterMethod goBackTotheLoginScreen" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- @AfterMethod goBackTotheLoginScreen -->
  <testcase name="@BeforeMethod VerifyHomePage" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- @BeforeMethod VerifyHomePage -->
  <testcase name="@AfterMethod goBackTotheLoginScreen" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- @AfterMethod goBackTotheLoginScreen -->
  <testcase name="@AfterTest terminateBroser" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- @AfterTest terminateBroser -->
  <testcase name="logIn" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- logIn -->
  <testcase name="SuccessLogin" time="0.0" classname="loginScreen.TestLogin">
    <skipped/>
  </testcase> <!-- SuccessLogin -->
</testsuite> <!-- Default test -->
